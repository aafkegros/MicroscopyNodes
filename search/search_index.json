{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>If you are not redirected, click here to start with the first tutorial.</p>"},{"location":"faq/","title":"Help and Contact","text":"<p>The main venue for Usage questions is the   image.sc forum and you can also search here for previous questions.</p> <p>If you've found a bug (or suspect something even a little bit of being non-intended behaviour), don't be afraid to open an issue!</p>"},{"location":"outdated/","title":"Installing and using Microscopy Nodes with Blender &lt; 4.2","text":""},{"location":"outdated/#install","title":"Install","text":"<ul> <li>Download an appropriate microscopynodes/tif2blender zip file from the releases page. Please note the Blender version number.</li> </ul> <p>Start blender.</p> <p>Install the <code>microscopynodes</code> Add-On: - In Blender go to <code>Edit &gt; Preferences</code> - Go to <code>Add-Ons</code> tab in <code>Preferences</code> - Press <code>Install</code> and give the <code>tif_loader.zip</code> file (as .zip) - In the added <code>microscopynodes</code> add-on window in <code>Preferences</code>: press the tick box to enable, and the arrow to unfold the details - in the details press <code>install tifffile</code> - (if this fails please try restarting blender and seeing if it can then find <code>tifffile</code>)</p>"},{"location":"outdated/#updating-microscopynodes","title":"Updating <code>microscopynodes</code>","text":"<p>To update the <code>microscopynodes</code> add-on (future versions may have bugfixes, new features) a few steps need to be taken: - In Blender go to <code>Edit &gt; Preferences</code> - Go to <code>Add-Ons</code> tab in <code>Preferences</code> and find the <code>microscopynodes</code> add-on - Press <code>Remove</code>  - Restart Blender - Install the new version.</p>"},{"location":"overview/","title":"Microscopy in Blender","text":"<p><code>Microscopy Nodes</code> is a Blender add-on that incorporates bioimage support for the open-source software blender.   Microscopy Nodes simplifies loading bioimage (tif/zarr) files as volumetric objects in Blender. </p> <p>Please make some pretty figures with this add-on! </p> <p>For usage questions please use the image.sc forum \ud83d\ude01 For issues/bug reports/feature requests please open an issue.</p> <p>If you publish with this add-on, please cite the preprint: <pre><code>@article {Gros2025.01.09.632153,\n    author = {Gros, Oane and Bhickta, Chandni and Lokaj, Granita and Schwab, Yannick and K{\\\"o}hler, Simone and Banterle, Niccol{\\`o}},\n    title = {Microscopy Nodes: versatile 3D microscopy visualization with Blender},\n    elocation-id = {2025.01.09.632153},\n    year = {2025},\n    doi = {10.1101/2025.01.09.632153},\n    publisher = {Cold Spring Harbor Laboratory},\n    URL = {https://www.biorxiv.org/content/early/2025/01/14/2025.01.09.632153},\n    eprint = {https://www.biorxiv.org/content/early/2025/01/14/2025.01.09.632153.full.pdf},\n    journal = {bioRxiv}\n} \n</code></pre></p>"},{"location":"overview/#current-features","title":"Current Features","text":"<p>Microscopy Nodes supports:</p> <ul> <li>up to 5D (tzcyx in any axis order) tifs and OME-Zarr files can be loaded. </li> <li>Channel interface to define how to load data</li> <li>Replacing a pyramidal dataset with it's higher resolution version</li> <li>Accurate scale bars and boxes</li> <li>Loading of per-index label masks</li> <li>Lazy loading of giant files (no data is loaded in RAM outside what's rendered)</li> </ul>"},{"location":"overview/#get-started","title":"Get Started!","text":"<p>All icons used except the Microscopy Nodes icon were designed for Blender by @jenzdrich under CC-BY-SA 4.0</p>"},{"location":"tutorials/1_start/","title":"1. First Use","text":""},{"location":"tutorials/1_start/#installing-microscopy-nodes","title":"Installing Microscopy Nodes","text":"Click to load video from YouTube.       By clicking, you agree to YouTube\u2019s privacy policy.      <ol> <li>Open Blender.</li> <li>Navigate to <code>Edit &gt; Preferences</code>.</li> <li>In the Add-ons tab, search for <code>Microscopy Nodes</code>.</li> <li>Click Install to download and enable the add-on.</li> </ol>"},{"location":"tutorials/1_start/#blender-interface-overview","title":"Blender Interface Overview","text":"<p>The Blender interface is very flexible and can be reconfigured in many ways. While this is a powerful feature, it also means that explaining the basics can be a bit technical, and some of the terms are Blender jargon. To make things easier, here is a quick overview of some key terms and where to find common functions.</p> <p>Further information and navigation can be found in the  Blender Manual</p> <p></p> <p>The Blender interface always contains: </p> <ol> <li> Top bar: contains the main menus and selection of the tabs, or   workspaces (e.g. Layout, Shading, Geometry Nodes).</li> <li> Workspace: Reconfigurable workspace. Contains different areas depending on the selection in the   topbar.</li> <li> Status bar: contains shortcuts suggestions</li> </ol> <p>But it can be configured much more with workspaces . Currently we're in the Layout workspace.</p>"},{"location":"tutorials/1_start/#layout-workspace","title":"Layout Workspace","text":"<p>The Layout workspace   (by default selected in the  topbar) is our main workspace, made for assembling and seeing your 3D scene. This contains multiple elements with Blender-specific names:</p> <p></p> <ol> <li> 3D Viewport: Main 3D interaction area. </li> <li> Outliner: Tree view of all objects in the scene. This is the easiest place to select objects.</li> <li> Properties Editor: Edit properties of the scene and the selected object. Under  you can find Microscopy Nodes.</li> <li> Timeline: For animation.</li> </ol> <p>With Microscopy Nodes, we also use the Shading workspace, and for advanced users, the Geometry Nodes and Scripting workspaces.</p>"},{"location":"tutorials/1_start/#the-3d-viewport","title":"The 3D Viewport","text":"<p>Annotated on the right in the image are widgets you can drag to rotate (axes),  scale and  move the view.</p> <p>Mouse navigation is possible and configurable in the  Preferences. This depends on which input device you use (2-button mouse, 3-button mouse, touchpad).</p>"},{"location":"tutorials/1_start/#the-view-menu","title":"The <code>View</code> menu","text":"<p>At the top of the  3D viewport, there is a dropdown menu called <code>View</code> - this has shortcuts and other tools to align the view. </p> <p>For example, if you lose all the objects in the scene, you can select an object in the  outliner in the top right, and use the menu <code>View &gt; Frame Selected</code> (or just <code>View &gt; Frame All</code>) to see your scene again.</p>"},{"location":"tutorials/1_start/#the-outliner","title":"The outliner","text":"<p>The  outliner lists all  collections and objects in the scene. Here you can select objects more easily.</p> <p>This also provides an interface for visibility in the / 3D viewport, and in the / final render. If objects are not visible, they are also not loaded into RAM, so it can speed up Blender to limit visibility.</p>"},{"location":"tutorials/1_start/#manipulating-objects","title":"Manipulating Objects","text":"<p>Annotated on the left in the image are widgets you can drag to select, move, rotate and scale objects. The transform widgets spawn a gizmo: a mouse-clickable interaction interface: </p> <p>Transforms can also be done with hotkeys: <code>G</code> for grab/move, <code>R</code> for rotate, <code>S</code> for scale. The transformation can be locked to an axis with the <code>X</code>, <code>Y</code> or<code>Z</code> key.</p>"},{"location":"tutorials/1_start/#adding-an-object","title":"Adding an object","text":"<p>At the top of the 3D viewport is an <code>Add</code> menu, from which you can add different primitive objects, such as a camera or lights. This is also findable under the key combination <code>Shift + A</code></p> <p>To add microscopy data, there is a separate loading window.</p>"},{"location":"tutorials/1_start/#deleting-objects","title":"Deleting objects","text":"<p>You can select any object in the  viewport or  outliner, and delete it by <code>Right Mouse Button &gt; Delete Object</code> or pressing <code>X</code> and confirming.</p> <p>For deleting all objects in the scene, it is fastest to press <code>A</code> to select all objects and <code>X</code> to delete them. </p> <p>In the  outliner, an entire group can be deleted at once with  <code>Right Mouse Button &gt; Delete Hierarchy</code></p>"},{"location":"tutorials/1_start/#viewport-rendering","title":"Viewport rendering","text":"<p>In the top right of the viewport you can change the way the contents are shown. </p> <p>  Microscopy Nodes volume data will only be visible in Material Preview and Rendered mode.</p> <p></p> <p>From left to right:</p> <ol> <li> Wireframe : Only the object skeleton, No volumetric data shown.</li> <li> Solid Mode: Only the external surfaces are drawn </li> <li> Material Preview: Is meant for previewing your scene without full calculations. Defaults to EEVEE. May be a fast view, but will be slow to open with microscopy data, and is data-dependent. </li> <li> Rendered: Shows the scene as it will appear in the final render. By default, Microscopy Nodes sets this to be in Cycles. Often the best way to view microscopy data.</li> </ol>"},{"location":"tutorials/1_start/#further-ui-instruction-video","title":"Further UI instruction (video)","text":"Click to load video from YouTube.              By clicking, you agree to YouTube\u2019s privacy policy."},{"location":"tutorials/2_loading_data/","title":"Loading microscopy data","text":""},{"location":"tutorials/2_loading_data/#video-tutorials","title":"Video tutorials","text":"<p>The Fluorescence tutorial shows how to load emissive data, and the EM tutorial shows how to load scattering data, these settings can be good to interchange!</p>        Click to load video from YouTube.       By clicking, you agree to YouTube\u2019s privacy policy.             Click to load video from YouTube.       By clicking, you agree to YouTube\u2019s privacy policy.      <p>The labelmask/surface tutorial is shown for EM data, but can be useful for any data type and binary or label masks:</p>        Click to load video from YouTube.       By clicking, you agree to YouTube\u2019s privacy policy."},{"location":"tutorials/2_loading_data/#1-point-to-your-data","title":"1. Point to your data","text":"<ol> <li> <p>Delete everything in the scene with <code>A</code> and <code>X</code></p> </li> <li> <p>In the   Scene Properties panel, find the   Microscopy Nodes panel. </p> </li> <li> <p>Provide the path to your data set:</p> <p>local TIFF file (preferably imagej-tif, but others work)</p> <p>OME-Zarr URL</p> <p>local OME-Zarr folder </p> </li> </ol> <p>For local files, you can use the file explorer . </p> <p>  With OME-Zarr URLs/folders, copy the address directly into the field. OME-Zarr links are not clickable. If the metadata does not populate, check out our tips for troubleshooting OME-Zarr.</p> <p>Example OME-Zarr datasets:</p> <ul> <li>https://s3.embl.de/microscopynodes/RPE1_4x.zarr ; Showing expansion microscopy of an RPE1 cell with cytoskeletal elements stained</li> <li>https://s3.embl.de/microscopynodes/FIBSEM_dino_masks.zarr ; Showing a dinoflagellate FIB-SEM dataset with segmentations</li> <li>The Image Data Resource OME-Zarr archive. Some may not work.</li> </ul>"},{"location":"tutorials/2_loading_data/#2-select-scale-optional","title":"2. Select scale (optional)","text":"<p>Microscopy Nodes automatically selects the smallest scale of data available. </p> <p>Downscaled versions get created if the data is over 4 GiB per timepoint. For OME-Zarr, all premade scales are also shown.</p> <p></p> <p>Any scale with a volume icon   will easily work in any part of Blender. The <code>1</code> icon is of a size where a single channel will definitely work. For larger datasets, check out the large data tutorial.</p>"},{"location":"tutorials/2_loading_data/#3-check-metadata","title":"3. Check metadata","text":"<p>The metadata populates automatically from the file: </p> <p>This contains:</p> <ul> <li>Pixel Sizes <p>This may be truncated in the view, up to 6 decimal places are used.</p> </li> <li>Pixel Units  <p>\u00c5 to m, or 'arbritrary unit (a.u)'</p> </li> <li>Axis order <p>A piece of text such as 'tzcyx'. number of letters needs to match the number of axes. Allows remapping of axis order by editing the text field.</p> </li> <li>Time (only if time axis exists) <p>Start and end frame, allows you to clip the time axis before loading.</p> </li> </ul>"},{"location":"tutorials/2_loading_data/#4-set-channels","title":"4. Set channels","text":"<p>Next we see the channel interface: </p> <p>From left to right:</p> <ul> <li>Channel name (editable)</li> <li>Visualization types:<ul> <li>Volume  </li> <li>Surface  </li> <li>Labelmask  </li> </ul> </li> <li>Emission on/off </li> <li>Colormap type:<ul> <li>Single Color  </li> <li>Linear </li> <li>Diverging  </li> <li>Categorical  </li> </ul> </li> <li>Color Picker ( if  )</li> </ul> <p>The Visualization type defines which objects will be loaded. If none are clicked in a channel, this channel will not be loaded. </p> <p>When loading with Emission on , the objects of this channel will by default emit light. If this is off , they will reflect/scatter light from the scene or background.</p> <p>The Colormap choice gives basic options for color before loading. If   Single Color is picked, the colormap will be linearly black -&gt; color picked in the color picker. </p> <p>Defaults can be changed in the preferences.</p> <p>Labelmasks</p> <p>Labelmasks  expect an array with separate integer values per object. If it gets a data channel, it will try to still split it into separate objects</p>"},{"location":"tutorials/2_loading_data/#5-extra-import-settings-optional","title":"5. Extra import settings (optional)","text":"<p>These settings are below the <code>Load</code> button as they are not essential to remap for your first load. They can be useful to change if you're using Microscopy Nodes more often, or have specific needs. Most of these will persist between sessions.</p> <p></p> <p>This includes the Data Storage - where the intermediate files get stored</p> <ul> <li>Temporary (Default) <p>Puts the data in a temporary file, you can check the temporary path in the preferences</p> </li> <li>Path <p>Gives a field to put in a location. </p> </li> <li>With Project <p>Will create a folder next to the project location. Requires that the project is saved</p> </li> </ul> <p> overwrite the world color upon loading. This is useful as the world color (white, black or grey) is used as default lighting.</p> <p> overwrite render settings upon loading. This turns itself off after the first load, to avoid overwriting custom settings.</p> <p> defines the input transform - Blender works in meters, but Microscopy Nodes uses this as multiple optional coordinate spaces:</p> <ul> <li><code>px -&gt; cm</code> <p>Default, scales the object such that each pixel takes 1 cm space in XY. Scales the Z axis such that it is isotropic with XY.</p> </li> <li><code>\u00c5 -&gt; m</code></li> <li><code>nm -&gt; m</code></li> <li><code>\u00b5m -&gt; m</code></li> <li><code>mm -&gt; m</code></li> <li><code>m -&gt; m</code></li> <li><code>nm -&gt; cm (Molecular Nodes)</code> </li> </ul> <p> defines the input location:</p> <ul> <li><code>XY Center</code></li> <li><code>XYZ Center</code></li> <li><code>Origin</code></li> </ul> <p>Choosing an input transform</p> <p>Note that you may need to go one scale higher than you expect with the  input transform, as a few meters is already quite large (the default cube is 2 m). The normal unit is the size of your dataset, and not always the unit of your pixel size.</p>"},{"location":"tutorials/2_loading_data/#6-load","title":"6. Load","text":"<p>Press the big <code>Load</code> button to load a dataset</p>"},{"location":"tutorials/3_objects/","title":"3. Objects","text":"<p>Microscopy Nodes loads your microscopy data as different types of objects, depending on how you loaded each channel.</p> <p></p> <p>Each type of object is placed in a  holder collection. The Axes and Slice Cube are always present.</p> <p>You can select an object by clicking on it in the  outliner (as shown in the screenshot) and change its properties:</p> <ul> <li>Change underlying data in the  modifier menu of the  properties or the (advanced) Geometry Nodes workspace  </li> <li>Change visualization in the  material menu of the  properties or the Shader Nodes workspace  </li> </ul> <p>The exact settings and where to change them change per object, so see below.</p>"},{"location":"tutorials/3_objects/#holder","title":"Holder","text":"<p>The  Holder is an empty object which is the <code>parent</code> of the other Microscopy Nodes objects. </p> <p>The holder can be scaled, moved and rotated and then all of its objects will be transformed along with it.</p>"},{"location":"tutorials/3_objects/#axes","title":"Axes","text":"<p>The   Axes object is always loaded with your dataset. It draws a scale grid based on the number of pixels, pixel size, and pixel unit.</p> <ul> <li> <p> Geometry options</p> <ul> <li><code>pixel unit</code> per tick <p>The distance between grid lines</p> </li> <li>Grid <p>Whether to draw a grid or only a box </p> </li> <li>Line thickness <p>Thickness of lines in arbitrary units</p> </li> <li>Frontface culling <p>If ticked, clips out the axes that are closest to the camera or viewpoint, so that they do not obstruct the view.</p> </li> <li>Separate planes <p>For each plane (xy bottom, top etc) you can select whether they will be drawn</p> </li> </ul> </li> <li> <p> Shader options</p> <ul> <li>Color </li> </ul> </li> </ul> <p>Scale grids can be moved, scaled and rotated independently of the holder without losing their accuracy.</p> <p>Bars versus grids</p> <p>In Microscopy Nodes, only scale grids are shown. Blender\u2019s default cameras are perspective cameras, where traditional scale bars are not very meaningful. We'll probably add support for some form of scale bar in the future for orthographic renders.</p>"},{"location":"tutorials/3_objects/#volumes","title":"Volumes","text":"<p>The  Volume holds channels of volumetric data, which can be rendered either as emitting or scattering light. It is generated when you enable  Volume during loading.</p> <ul> <li> Geometry options<ul> <li>Included channels <p>If channels are not included, they are also not loaded into RAM </p> </li> </ul> </li> <li> Shader options<ul> <li>Pixel intensities</li> <li>Opacity calculation</li> <li>Color LUT</li> </ul> </li> </ul> <p>The easiest way to edit a volume shader is in the  Shader Nodes workspace, where you can most easily switch between channels in the  properties.</p> <p>You can toggle between emission and scattering modes using the  emission toggle in loading.</p>"},{"location":"tutorials/3_objects/#surfaces","title":"Surfaces","text":"<p>The  Surface object is a mesh extracted from a volume using an isosurface threshold. It is generated when you enable  Surface during loading.</p> <ul> <li> <p> Geometry options</p> <ul> <li>Included channels</li> <li>Threshold <p>The intensity value above which the surface is extracted. </p> </li> <li>Voxel size (only listed if  Mesh Resolution is not <code>Actual</code>) <p>Interactive scalable unit for mesh detail</p> </li> </ul> </li> <li> <p> Shader options</p> <ul> <li>Standard mesh shading parameters (color, opacity etc)</li> </ul> </li> </ul>"},{"location":"tutorials/3_objects/#label-masks","title":"Label Masks","text":"<p>The  Label Mask object is a mesh generated from a label image, such as a segmentation channel. It is generated when you enable  Labelmask during loading.</p> <p>Each value in the volume is turned into a separate mesh.</p> <ul> <li> <p> Geometry options</p> <ul> <li>Included channels</li> </ul> </li> <li> <p> Shader options</p> <ul> <li>Color per label </li> <li>Revolving colormap or linearly distributed among objects</li> <li>Standard mesh shading parameters (color, opacity etc)</li> </ul> </li> </ul>"},{"location":"tutorials/3_objects/#slice-cube","title":"Slice Cube","text":"<p>The  Slice Cube is a movable object that defines the visibility of other objects.</p> <p>The slice cube is inherently nothing else than a Cube with a transparent shader. The linkage to its transparency is done from the  shader of the sliced object. This means you can also add a new cube and point to this instead.</p> <p>This has no  Geometry options or  Shader options</p> How the Microcopy Nodes objects work <p>The data objects are Geometry Nodes objects that reference preloaded data stored in the <code>cache</code> collection. In the Geometry Nodes workspace  you can add edit the loaded data and add modifiers.  </p>"},{"location":"tutorials/4_shading/","title":"Shading","text":"<p>Shading encompasses the visualization of Blender's objects. The shading options can be found in two places:</p> <ul> <li>in the  Shader Nodes workspace, find this in the  topbar.</li> <li>in the  material tab of the  properties.</li> </ul> <p>These two locations contain the same information, laid out in different ways. </p> <p>The default Microscopy Nodes shaders are built from  nodes, and contains information on how the object interacts with light and its transparency. The defaults are listed here separately for the different Microscopy Nodes data-objects.</p>"},{"location":"tutorials/4_shading/#volume-shading","title":"Volume Shading","text":"<p>The Shader Nodes workspace  when selecting a Microscopy Nodes  volume: </p> <p></p>"},{"location":"tutorials/4_shading/#data-loading","title":"Data Loading","text":"<p>This is where the data gets read out from the vdb grid (as handed over from the Geometry Nodes) and gets normalized. You will usually not need to edit this.</p> Reusing shaders <p>The normalization that is done in Normalize Data  is dependent on the specific data, as it rescales the min and max value of the data to 0 and 1 - after it's already transformed to small floating point values for saving to .vdb files. </p> <p>Essentially, this means its best to keep the normalization of new data when you replace the rest.</p> <p> </p>"},{"location":"tutorials/4_shading/#pixel-intensities","title":"Pixel Intensities","text":"<p>The pixel intensities rescale the min and max value, and thus the linear interpolation of the data. This is analogous to a Fiji Brightness &amp; Contrast window.</p> <p>You can move the two handles to move the min and max. </p> <p></p> How this works <p>This is a Blender <code>Color Ramp</code> that only outputs Alpha, and not Color. We feed in normalized data between 0 and 1 (as represented in histogram) and map this to the color ramp. The color ramp is two nodes of alpha 0 (min) and 1 (max). </p> <p>This also means you can add extra nodes in here if you want nonlinearity in your pixel intensities, or flip the nodes to invert. However, it is often easier to just change the colormap.</p>"},{"location":"tutorials/4_shading/#color-lut","title":"Color LUT","text":"<p>The lookup tables are <code>Color Ramp</code> objects, LUTs can be edited:</p> <ul> <li>Editing handles<ul> <li>You can drag to change its position and click on it to get a color picker. To change contrast, its recommended to change the pixel intensities instead of the color.</li> <li>The bottom fields are the index, position and color of the selected field - allowing editing of the handles with more precision</li> </ul> </li> <li>Replacing the LUT by  right clicking the LUT and selecting  LUTs. This lists multiple colormaps.<ul> <li> Sequential, monotonic rising or falling, often good for microscopy</li> <li> Diverging, distinctive middle of the colormap</li> <li> Cyclical, start and end together</li> <li> Qualitative, separates consecutive values, good for labelmasks</li> <li> Miscellaneous</li> <li> Single Color, gives a new black-to-white colormap, to easily edit LUTs</li> </ul> </li> <li>  Flipping the LUT<ul> <li>either under the down-carrot or under  right clicking the LUT</li> <li>Flipped LUTs can be loaded by default</li> </ul> </li> </ul>"},{"location":"tutorials/4_shading/#opacity","title":"Opacity","text":"<p>The tranparency window describes the total contribution of each voxel to the image. If you are in an emission mode, this defines the volume brightness, in scattering mode, this describes the volume density.</p> <p>Here there are multiple options:</p> <ul> <li>Clip Min<ul> <li>Sets all values at 0 as transparent (left from the min in Pixel Intensities).</li> </ul> </li> <li>Clip Max<ul> <li>Sets all values at 1 to transparent (right from the max in Pixel Intensities).</li> </ul> </li> <li>Alpha Baseline<ul> <li>Constant alpha for all voxels that are not Clipped.</li> </ul> </li> <li>Alpha Multiplier<ul> <li>Alpha value that multiplies the input values, and thus linearly increases with intensity. Does not affect Clipped values. Adds onto Alpha Baseline.</li> </ul> </li> </ul>"},{"location":"tutorials/4_shading/#shaders-emissionscatter","title":"Shaders (emission/scatter)","text":"<p>This is where the Microscopy Nodes pre-processing hooks into the default Blender volume interfaces. This is split between an  emissive and  scattering setup. Currently the easiest way to switch between them is through reloading.  </p> Advanced <p>Some things are editable in here, such as the Anisotropy of the scattering, which defines whether there is more backward scattering (less penetrant) or more forward scattering. </p> <p>Additionally, by Adding nodes (from the <code>Add</code> menu or <code>Shift + A</code>), and connecting these together, it's possible to make combined setups for emissive and scattering shaders.</p>"},{"location":"tutorials/4_shading/#slice-cube","title":"Slice Cube","text":"<p>The Slice Cube section allows slicing of the volume. This has an  Object pointer to a cube in the scene (by default the loaded slice cube).</p> <p>The object bounding box gets fed into the slicer, which sets all regions outside the bounding box to transparent. </p> How this works <p>As shown if you press the  icon at the top right of the group, how the slicing node works is to take the remapped locations as the Texture Coordinate input provides (mapping the data to the coordinates of the cube space) and compare these to the boundes (1, -1). If positions are not in the range of the cube space, the shader is set to a Transparent Shader.</p>"},{"location":"tutorials/4_shading/#surface-shading","title":"Surface shading","text":"<p>The  Surface object shader is more simple than the volumetric, as it can only have one color, although it can have many properties. The shader does not explicitly load the data, as the data interaction is all done through the threshold in the  Geometry options.</p> <p></p>"},{"location":"tutorials/4_shading/#color-lut_1","title":"Color LUT","text":"<p>The color lookup table works similar to the volume color LUT. However, the surface can only display one value, so the <code>Fac</code> value defines where along the lookup table the color is drawn from. </p> <p>For a regular color picker you can leave the <code>Fac</code> at <code>1</code> and click the rightmost handle. The other way would be to replace this box with a color box (<code>Add &gt; Input &gt; RGB</code>)</p>"},{"location":"tutorials/4_shading/#mesh-shading","title":"Mesh shading","text":"<p>The Principled BSDF node is a combined node that combines features to create different material properties. The Blender manual  gives a complete manual to its features. </p> <p>By default this has two inputs set differently from Blender default, the Base Color and Emission Color/Strength. These colors are set to link to the Color LUT. </p> <p>The Emission Strength is set to 0 or 0.5 depending on whether this was loaded with  emission on or  emission off. This is done for consistency, and that dark scenes have masks and surfaces as clearly visible as data, without setting up lighting.</p> Emission can 'flatten' objects <p>The feeling of depth in 3D rendering is often due to the interaction of objects with light. When things are emitting light themselves, they can often look flat. For more feeling of depth, it might be better to load with  emission off, and set up some form of lighting.</p>"},{"location":"tutorials/4_shading/#slice-cube_1","title":"Slice cube","text":"<p>See volume Slice Cube.</p>"},{"location":"tutorials/4_shading/#labelmask-shading","title":"Labelmask shading","text":"<p>The  label mask shader is very similar to the  Surface shader, but is able to read out and use the <code>object id</code> to color by.</p> <p></p>"},{"location":"tutorials/4_shading/#object-id-handling","title":"Object ID handling","text":"<p>The <code>object id</code> (the value in the label mask) is connected and retrievable from the vertices of the labelmask objects. </p> <p>This is led into a group that maps it to values between 0 and 1 for the LUT. This has the option of a revolving sequence: ideal for a categorical colormap with distinct values, making the object ids loop through these values. Or a consecutive sequence scaling all values linearly along the <code>object id</code>s, ideal for linear colormaps.</p>"},{"location":"tutorials/4_shading/#color-lut_2","title":"Color LUT","text":"<p>The color lookup table works similar to the volume color LUT. Often categorical colormaps work best for labelmasks, if you have only one channel of masks.</p>"},{"location":"tutorials/5_creating_ouput/","title":"Creating output","text":"<p>Creating output from a scene in Blender is done by adding a  camera and pressing <code>Render &gt; Render Image</code> or <code>Render &gt; Render Animation</code> for the full animation. This writes images or movies to your output folder.</p>        Click to load video from YouTube.       By clicking, you agree to YouTube\u2019s privacy policy."},{"location":"tutorials/5_creating_ouput/#adding-and-moving-the-camera","title":"Adding and moving the camera","text":"<p>Adding a camera can be done from the  3D viewport by pressing <code>Add</code> or <code>Shift + A</code>, and finding the  camera in the submenu.</p> <p>The camera can be moved as any object but has a few extra features.</p>"},{"location":"tutorials/5_creating_ouput/#active-camera","title":"Active Camera","text":"<p>The active camera is the camera in the scene that will be used in rendering, and can be switched and selected through the green  camera icon in the  outliner.</p> <p></p>"},{"location":"tutorials/5_creating_ouput/#viewing-through-the-active-camera","title":"Viewing through the active camera","text":"<p>The view through the current active camera can be seen by clicking the  camera icon on the right of the  3D viewport.</p>"},{"location":"tutorials/5_creating_ouput/#aligning-view","title":"Aligning view","text":"<p>The easiest way to set the camera direction is by aligning it to the view. This means:</p> <ul> <li>Setting a nice view angle and position</li> <li>Aligning the camera with <code>View &gt; Align View &gt; Align Active Camera To View</code></li> </ul>"},{"location":"tutorials/5_creating_ouput/#camera-properties","title":"Camera properties","text":"<p>Camera properties can be found under the  camera icon in the  properties. This is where the camera can be switched between perspective and orthographic modes, or the focal length set for a perspective camera.</p> <p>Perspective and orthographic cameras</p> <p>Perspective cameras are the default of Blender, and often the type of camera we are most used to in daily life. These cameras have a virtual lens, providing a perspective transform, making distant objects appear smaller than near objects.</p> <p>In contrast to this, orthographic cameras show all objects as the same size, no matter the distance to the camera. This thus can be better for comparing scales of objects in data, although it is less intuitive to viewers.</p>"},{"location":"tutorials/5_creating_ouput/#setting-up-lighting","title":"Setting up lighting","text":"<p>Lighting can be very important for getting a good feeling of depth for the data, but it is not always necessary or essential.</p> <p>In  emissive renders, it is often not necessary to set up light. </p> <p>In  non-emissive renders, the Microscopy Nodes default is to use the  world color and brightness to light the scene. However, setting up specific lighting add depth to renders.</p> <p>You can set up lights by adding them from the <code>Add</code> menu, as objects, moving them and changing their <code>Power</code> and <code>Color</code> in the  properties.</p>"},{"location":"tutorials/5_creating_ouput/#basic-animation","title":"Basic animation","text":"<p>Animation can be very intricate, but the basics and getting started can be straightforward. The way this works is by setting  keyframes. These are a set value at a set timepoint, if this value is different at another keyframe, Blender will interpolate between the two points.</p> <p>The nice part of Blender is that almost any value can be keyframed. You can set a keyframe by hovering over a value and pressing <code>I</code>.</p> <p>So a simple camera animation setup takes:</p> <ul> <li>Set the camera </li> <li>Set the  timeline at timepoint 0</li> <li>Hover over the camera <code>Location</code> and <code>Rotation</code> in the  properties and press <code>I</code>, setting a keyframe.</li> <li>Set the  timeline at timepoint 100</li> <li>Set the camera to a new position</li> <li>Again hover over the camera <code>Location</code> and <code>Rotation</code> in the  properties and press <code>I</code>, setting a keyframe.</li> </ul> <p>Then in between the two keyframes, Blender will interpolate the camera positioning.</p>"},{"location":"tutorials/5_creating_ouput/#rendering","title":"Rendering","text":"<p>Rendering can be done with <code>Render &gt; Render Image</code> or <code>Render &gt; Render Animation</code>. It can be useful to still check out the render settings </p>"},{"location":"tutorials/large_data/","title":"Large data","text":"<p>Microscopy data is often very large,   Microscopy Nodes has some strategies to deal with this. These depend on the size of the data, the shape of the data, and your computational resources (and skills). The key of this is working at a smaller scale, and then reloading to larger data.</p> <p>Here it is relevant to distinguish between two types of large data: </p> <ul> <li> <p>Time sequence/few channels (not loading all data in the same timeframe)</p> <p>This mostly has issues in storage, and is more a point of only loading the data you need at a certain point, but will always just work.</p> </li> <li> <p>Large data that's all concurrently loaded</p> <p>This becomes a bigger issue, especially with the current 4 GiB limit of EEVEE.</p> </li> </ul> <p>EEVEE cannot handle large data</p> <p>EEVEE currently cannot handle volumetric data over 4 GiB. This means that scaling up our data will be easier in Cycles. By default after loading, the render engine is set to Cycles. </p> <p>Cycles is only applied to the view if the shading preview is set to  Rendered preview.</p> <p>There are a few strategies:</p>"},{"location":"tutorials/large_data/#working-at-large-scale","title":"Working at large scale","text":"<p>You can actually work at large scales, as long as you have enough and take care to work only in Cycles:</p> <p>Some  workspaces will automatically be in   Material preview mode. It is convenient to first go through the different  workspaces and switch them all to  Rendered preview.</p>"},{"location":"tutorials/large_data/#reloading","title":"Reloading","text":"<p>The reloading workflow means that you first work on a smaller version of the data and later replace this with a larger one. </p> <p>This is controlled mainly by the  Reload field in the   Microscopy Nodes load panel: </p> <p>This can be pointed to a previously loaded Microscopy Nodes holder object: </p> <p>Which will make a new action Reload the data in the holder. This has two extra options:</p> <ul> <li> <p> Overwrite data</p> <p>Changes out the underlying data (labelmasks are currently always regenerated)</p> </li> <li> <p> Overwrite settings</p> <p>Overwrites all settings from the load panel, but retains anything set by the user, this includes input location/transform, emission, and color</p> </li> </ul> <p>For reloading to deal with large data, it is usually best to reload only updating  the underlying data to the higher resolution.</p>"},{"location":"tutorials/large_data/#reloading-on-workstation-or-cluster","title":"Reloading on workstation or cluster","text":"<p>It is possible to make a project on a less capable computer, and then transfer it to a workstation or an HPC cluster. This can be done in multiple ways:</p> <ul> <li>Transfering with data <p>Easiest to do with your data loaded 'With Project' in the extra import settings, then it is an easy matter of transferring the .blend file and the data folder next to it to this computer.</p> </li> <li>Reloading from a GUI</li> <li>Reloading from the command line</li> </ul>"},{"location":"tutorials/large_data/#reloading-from-the-command-line","title":"Reloading from the command line","text":"<p>To replace your data from the command line interface, you set up all the  reloading and import settings in the GUI (this currently works best with  Overwrite settings off) and run a headless python script that looks like this: <pre><code>import bpy\nbpy.ops.microscopynodes.load_background()\nbpy.ops.wm.save_mainfile()\n</code></pre> by running: <code>/path/to/Blender/executable -b /path/to/blendfile.blend -P /path/to/reload_script.py</code></p> <p>This will then load the data according to the Microscopy Nodes settings, and resave the .blend file. </p> <p>You can subsequently render headlessly as well, here you can follow the  Blender documentation on this.</p>"},{"location":"tutorials/ome_zarr_troubleshooting/","title":"OME-Zarr troubleshooting","text":"<p>OME-Zarr is a developing standard and is very flexible, which sometimes makes it hard to read and write, and no software supports all features. </p> <p>  Microscopy Nodes supports OME-Zarr up to version 0.5, to load single, up to 5-dimensional, arrays. </p> <p>Is your OME-Zarr not loading?</p> <p>A quick option is to append <code>/0</code> after your path. Some OME-Zarr writers create a group at the .zarr adress, with the first (and often, only) image at .zarr/0</p>"},{"location":"tutorials/ome_zarr_troubleshooting/#ome-zarr-collections","title":"OME-Zarr collections","text":"<p>There is currently no support for any form of self-discovering collections from OME-Zarr, this can cause issues for:</p> <ul> <li>Wells</li> <li>Fields</li> <li>Labels </li> <li>Large Zarr-groups (such as OpenOrganelle datasets)</li> <li>Bioformats2raw export</li> </ul> <p>All of these images can still be opened, by pointing to the specific path of the array, which contains the different OME 'multiscales'. </p> <p>Pointing to a specific path</p> <p>For example, for the dataset https://uk1s3.embassy.ebi.ac.uk/idr/zarr/v0.3/idr0052A/5514375.zarr of the IDR, the labels are at https://uk1s3.embassy.ebi.ac.uk/idr/zarr/v0.3/idr0052A/5514375.zarr/labels/Cell and https://uk1s3.embassy.ebi.ac.uk/idr/zarr/v0.3/idr0052A/5514375.zarr/labels/Chromosomes. These are not auto-discovered, but can be loaded with the specific paths.</p> <p>Support for collections will come in the future, but this will wait for the planned reorganization OME-Zarr collection structure.</p>"},{"location":"tutorials/preferences/","title":"Preferences / Customization","text":"<p>The   Microscopy Nodes addon has  Preferences to allow for a custom experience and defaults. </p> <p>You can find these under <code>Edit &gt; Preferences &gt; Add-ons &gt; Microscopy Nodes</code>.</p> <p></p> <p>Here we get multiple options for defaults and settings:</p> <ul> <li>Default \"Path\" <p>The cache path that is set if the load option <code>Path</code> is selected   </p> </li> <li>Default \"Temporary\" <p>The cache path that is generated when load option <code>Temporary</code> is selected   </p> </li> <li>Default channels + channel number <p>This defines the default settings for the channel interface when a new dataset is loaded. If more channels are present in the data than defaults, the list revolves. </p> </li> <li>Mesh density <p>This sets how fine/coarse the geometries for labelmasks and surfaces are </p> </li> <li>Invert Color <p>Inverts all colormaps on load and replace</p> </li> <li>Overwrite local files (debug) <p>If reloading fails for some reason, this is useful to check, but is usually only used for development.</p> </li> </ul>"},{"location":"tutorials/rendering/","title":"Rendering","text":"<p>There are a lot of extra parameters that can be adjusted to optimize rendering in Blender. All of these are explained in the  Blender manual. Some, however, are especially useful to know for microscopy data or for new users. These are covered here.</p>"},{"location":"tutorials/rendering/#render-engines","title":"Render Engines","text":"<p>There are two major render engines in Blender. EEVEE, a rasterized render engine, and Cycles a ray-traced engine. </p>"},{"location":"tutorials/rendering/#eevee","title":"EEVEE","text":"<p>EEVEE is a render engine that is made to be fast, and powerful. It is less optimized for  volumetric data, especially for dense/scattering volumes. Currently, it can only handle volume data &lt; 4 GiB.</p> <p>However, it is still very strong, is usually able to combine semi-transparent masks and volumes, and is often faster, especially for rendering emissive time-lapses. </p> <p>It may take longer to open an EEVEE interface with volumes, and for larger data it can be slower in general than Cycles.</p>"},{"location":"tutorials/rendering/#cycles","title":"Cycles","text":"<p>Cycles is the ray-traced render engine, slower than EEVEE as it calculates light bouncing. This is best for scattering, and can be faster with bigger data. </p>"},{"location":"tutorials/rendering/#render-settings","title":"Render Settings","text":"<p>The  render settings can be found in the  properties.</p>"},{"location":"tutorials/rendering/#samples","title":"Samples","text":"<p>The number of samples is a metric for how much time the rendering algorithm takes to make an image. Lower samples mean more noise, but quicker render times, a high number of samples makes nicer images, but takes more time.</p>"},{"location":"tutorials/rendering/#volume-scattering-cycles","title":"Volume scattering (Cycles)","text":"<p>The amount of scattering in a volume is very important for the visualization of  dense/scattering volumes. These are not as important in emissive  volumes.</p> <p>This is only well-defined in a raytracer, so this is only available in Cycles. These can significantly affect performance.</p> <p>This can be controlled with two parameters:</p> <ul> <li>Volumes &gt; Max Steps <p>The depth of traversal through the volume</p> </li> <li>Light Paths &gt; Max Bounces &gt; Volume  <p>Total amount of volume scattering events</p> </li> </ul> <p>In addition, the <code>Volumes &gt; Step Rate</code> can be changed, but only if artefacts show up. This can often also be helped by downscaling the volume (through the holder).</p>"},{"location":"tutorials/rendering/#general-scattering-cycles","title":"General scattering (Cycles)","text":"<p>The number of light bounces can be relevant also outside of the volumes. Especially for <code>Light Paths &gt; Max Bounces &gt; Transparent</code> and <code>Light Paths &gt; Max Bounces &gt; Total</code>. This is relevant to avoid black artefacting when overlaying many (semi-)transparent meshes. </p>"},{"location":"tutorials/rendering/#transparent-background","title":"Transparent background","text":"<p>This can be found under Film &gt; Transparent. Note that a transparent background can and will still be able to light a scene, if the  background color is not black.</p>"},{"location":"tutorials/rendering/#color-management","title":"Color Management","text":"<p>The <code>Color Management &gt; View Transform</code> is set by default to <code>Standard</code> after loading with Microscopy Nodes, doing no postprocessing of colors in the final image. The default of Blender is <code>AgX</code>. This postprocesses the colors in the image to make them look more 'real'/'better', and has multiple Looks (high contrast, punchy etc) to choose from.</p>"},{"location":"tutorials/rendering/#output-settings","title":"Output settings","text":"<p>The  output settings can be found in the  properties.</p>"},{"location":"tutorials/rendering/#time","title":"Time","text":"<p>The timing of output can be changed. The Frame Rate for output videos and previews can be changed under <code>Format &gt; Frame Rate</code>.</p> <p>Time Stretching, under <code>Frame Range</code>, is the best way to offset Blender-frame rate from your volume's frame rate. Stretching time here allows e.g. more frames of camera movement per timeframe of your biological sample.</p>        Click to load video from YouTube.       By clicking, you agree to YouTube\u2019s privacy policy."},{"location":"tutorials/rendering/#output-location-and-format","title":"Output location and format","text":"<p>Under  &gt; Output, the output file location and format can be defined. Here it is useful to note that if the format is set to <code>PNG</code>, as default, you would still have to compile the frames to video later.</p> <p>Optionally, you can set the output format to <code>FFMPEG Video</code>, which will output a full video when you render an animation. This does limit your capacity to edit the video encoding and you cannot stop the render e.g. halfway and still retain the first half of the output.</p>"},{"location":"tutorials/surface_smoothing/","title":"Surface modification","text":"<p>After loading a  labelmask or  surface, the geometry is often still quite jagged. </p> <p>This can be edited through two techniques:</p> <ul> <li>changing the mesh density in the preferences and reloading</li> <li>adding smoothing modifiers</li> <li>editing the mesh using sculpting or modeling</li> </ul>"},{"location":"tutorials/surface_smoothing/#adding-modifiers","title":"Adding modifiers","text":"<p>Modifiers can be added under the  modifiers in the  properties, under the <code>+ Add Modifier</code> button. </p> <p>Useful smoothing modifiers are:</p> <ul> <li> Surface Subdivision</li> <li> Smooth </li> <li> Smooth Corrective</li> <li> Smooth by Laplacian</li> </ul> <p>Especially  Surface Subdivision is useful, although this can create too many vertices (which you could then again destroy with something such as a  Decimate modifier)</p> <p>These methods will distort your geometry, so use only in cases where you can allow this.</p>"}]}